plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.0'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'

//	id 'org.springframework.boot' version '3.3.5'
//	id 'io.spring.dependency-management' version '1.1.6'

    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.umc'
version = '1.0.0'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.hibernate.orm:hibernate-core:6.0.2.Final'
    implementation 'mysql:mysql-connector-java:8.0.33'

    // Bean Validation을 위한 Hibernate Validator 추가
    implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final' // 최신 호환 버전 사용

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Jackson 라이브러리
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.3'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.3'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    // SpringDoc OpenAPI
//    implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
//    implementation 'org.springdoc:springdoc-openapi-data-rest:1.6.9'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // 테스트 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
}


sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'src/main/resources']
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

// Querydsl 설정부
def generated = 'src/main/generated'

querydsl {
    jpa = true
    querydslSourcesDir = generated
}
sourceSets {
    main.java.srcDir generated
}

compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}